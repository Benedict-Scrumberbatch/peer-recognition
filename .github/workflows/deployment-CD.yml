# This is a basic workflow to help you get started with Actions

name: Deployment-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodule: true
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
      - name: Docker Experimental Status
        run: |
          docker version -f '{{.Server.Experimental}}'
      - name: Turn on Experimental Docker Features
        run: |
          echo $'{\n  "experimental": true,\n  "features": {\n    "buildkit": true\n  }\n}' | sudo tee /etc/docker/daemon.json
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
      - name: Docker Experimental Status
        run: |
          docker version -f '{{.Server.Experimental}}'
      - run: |
          export OSTYPE="$(uname | tr A-Z a-z)" 
          curl -fsSL --output "/tmp/docker-app-${OSTYPE}.tar.gz" "https://github.com/docker/app/releases/download/v0.8.0/docker-app-${OSTYPE}.tar.gz"
          tar xf "/tmp/docker-app-${OSTYPE}.tar.gz" -C /tmp/
          mkdir -p ~/.docker/cli-plugins && cp "/tmp/docker-app-plugin-${OSTYPE}" ~/.docker/cli-plugins/docker-app
      - run: docker app --help
      - run: docker app build --help
      - run: docker app init peer-reognition-deployment --compose-file docker-compose.yml
      - run: docker app build . -t ghcr.io/benedict-scrumberbatch/peer-recognition-deployment-full-stack-docker-app
      - run: docker app push ghcr.io/benedict-scrumberbatch/peer-recognition-deployment-full-stack-docker-app
#       - run: git submodule init
#       - run: git submodule update --init --recursive
#       - run: docker-compose build
#       - run: docker pull postgres
#       - run: docker images
#       - run: npm run docs
# #       - run: npm run test
#       - name: GitHub Pages
#         # You may pin to the exact commit or the version.
#         # uses: crazy-max/ghaction-github-pages@b8f8d291c97fe0edd9fb4ee73018163593418e8f
#         uses: crazy-max/ghaction-github-pages@v2.3.0
#         with:
#           # Git branch where assets will be deployed
#           target_branch: gh-pages
#           # Build directory to deploy
#           build_dir: docs
#         env:
#           GITHUB_TOKEN: ${{ secrets.REPO_TOKEN_ACTIONS }}
